export const pot2PumpFactoryABI = [
  {
    type: "function",
    name: "DEFAULT_ADMIN_ROLE",
    inputs: [],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "LAUNCHED_TOKEN_DECIMALS",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "OPERATOR_ROLE",
    inputs: [],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "UPGRADER_ROLE",
    inputs: [],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "UPGRADE_INTERFACE_VERSION",
    inputs: [],
    outputs: [{ name: "", type: "string", internalType: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "__BaseFactory_init",
    inputs: [
      {
        name: "baseParams",
        type: "tuple",
        internalType: "struct BaseFactory.BaseParams",
        components: [
          { name: "vaultFactory", type: "address", internalType: "address" },
          {
            name: "launchedTokenImpl",
            type: "address",
            internalType: "address",
          },
          { name: "pairImpl", type: "address", internalType: "address" },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "__MemeFactory_init",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct MemeFactory.MemeFactoryParams",
        components: [
          {
            name: "base",
            type: "tuple",
            internalType: "struct BaseFactory.BaseParams",
            components: [
              {
                name: "vaultFactory",
                type: "address",
                internalType: "address",
              },
              {
                name: "launchedTokenImpl",
                type: "address",
                internalType: "address",
              },
              { name: "pairImpl", type: "address", internalType: "address" },
            ],
          },
          {
            name: "memeTokenSupply",
            type: "uint256",
            internalType: "uint256",
          },
          { name: "launchCycle", type: "uint256", internalType: "uint256" },
          { name: "tokenTo", type: "address", internalType: "address" },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "acceptDefaultAdminTransfer",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addEvent",
    inputs: [
      { name: "depositor", type: "address", internalType: "address" },
      { name: "launchedToken", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addRaisedToken",
    inputs: [
      { name: "_raisedToken", type: "address", internalType: "address" },
      { name: "_minCap", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "allPairsLength",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "allocation",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IPot2PumpFactory.LPAllocation",
        components: [
          {
            name: "participantAllocation",
            type: "uint16",
            internalType: "uint16",
          },
          { name: "burnAllocation", type: "uint16", internalType: "uint16" },
          { name: "honeypotFee", type: "uint16", internalType: "uint16" },
          { name: "tokenDeployer", type: "uint16", internalType: "uint16" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "beginDefaultAdminTransfer",
    inputs: [{ name: "newAdmin", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "cancelDefaultAdminTransfer",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "changeDefaultAdminDelay",
    inputs: [{ name: "newDelay", type: "uint48", internalType: "uint48" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "cooldownDuration",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "createPair",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct IPot2PumpFactory.CreatePairParams",
        components: [
          { name: "raisedToken", type: "address", internalType: "address" },
          { name: "name", type: "string", internalType: "string" },
          { name: "symbol", type: "string", internalType: "string" },
          { name: "swapHandler", type: "address", internalType: "address" },
        ],
      },
    ],
    outputs: [
      { name: "pair", type: "address", internalType: "address" },
      { name: "launchedToken", type: "address", internalType: "address" },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "defaultAdmin",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "defaultAdminDelay",
    inputs: [],
    outputs: [{ name: "", type: "uint48", internalType: "uint48" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "defaultAdminDelayIncreaseWait",
    inputs: [],
    outputs: [{ name: "", type: "uint48", internalType: "uint48" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "events",
    inputs: [{ name: "depositor", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "address[]", internalType: "address[]" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "feeVaults",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getLaunchedTokenImplementation",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPair",
    inputs: [
      { name: "launchedToken", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPair",
    inputs: [{ name: "index", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPairImplementation",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRoleAdmin",
    inputs: [{ name: "role", type: "bytes32", internalType: "bytes32" }],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getVaultFactory",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getWithdrawableRaisedAmount",
    inputs: [
      { name: "launchedToken", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "grantRole",
    inputs: [
      { name: "role", type: "bytes32", internalType: "bytes32" },
      { name: "account", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "hasRole",
    inputs: [
      { name: "role", type: "bytes32", internalType: "bytes32" },
      { name: "account", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct Pot2PumpFactory.Pot2PumpFactoryParams",
        components: [
          {
            name: "base",
            type: "tuple",
            internalType: "struct BaseFactory.BaseParams",
            components: [
              {
                name: "vaultFactory",
                type: "address",
                internalType: "address",
              },
              {
                name: "launchedTokenImpl",
                type: "address",
                internalType: "address",
              },
              { name: "pairImpl", type: "address", internalType: "address" },
            ],
          },
          { name: "launchCycle", type: "uint256", internalType: "uint256" },
          { name: "tokenTo", type: "address", internalType: "address" },
          { name: "feeVaults", type: "address", internalType: "address" },
          { name: "initialAdmin", type: "address", internalType: "address" },
          { name: "initialDelay", type: "uint48", internalType: "uint48" },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isAllowedRaisedToken",
    inputs: [{ name: "token", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "launchCycle",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "memeTokenSupply",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingDefaultAdmin",
    inputs: [],
    outputs: [
      { name: "newAdmin", type: "address", internalType: "address" },
      { name: "schedule", type: "uint48", internalType: "uint48" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingDefaultAdminDelay",
    inputs: [],
    outputs: [
      { name: "newDelay", type: "uint48", internalType: "uint48" },
      { name: "schedule", type: "uint48", internalType: "uint48" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "proxiableUUID",
    inputs: [],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "raisedTokenMinCaps",
    inputs: [{ name: "raisedToken", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "removeEvent",
    inputs: [
      { name: "depositor", type: "address", internalType: "address" },
      { name: "launchedToken", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "removeRaisedToken",
    inputs: [
      { name: "_raisedToken", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceRole",
    inputs: [
      { name: "role", type: "bytes32", internalType: "bytes32" },
      { name: "account", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "revokeRole",
    inputs: [
      { name: "role", type: "bytes32", internalType: "bytes32" },
      { name: "account", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "rollbackDefaultAdminDelay",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setCooldownDuration",
    inputs: [
      { name: "_cooldownDuration", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setLaunchCycle",
    inputs: [
      { name: "_launchCycle", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setMemeTokenSupply",
    inputs: [
      { name: "_memeTokenSupply", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setTokenTo",
    inputs: [{ name: "_tokenTo", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setVaultFactory",
    inputs: [
      { name: "_vaultFactory", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [{ name: "interfaceId", type: "bytes4", internalType: "bytes4" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenTo",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "updateAllocation",
    inputs: [
      {
        name: "newAllocation",
        type: "tuple",
        internalType: "struct IPot2PumpFactory.LPAllocation",
        components: [
          {
            name: "participantAllocation",
            type: "uint16",
            internalType: "uint16",
          },
          { name: "burnAllocation", type: "uint16", internalType: "uint16" },
          { name: "honeypotFee", type: "uint16", internalType: "uint16" },
          { name: "tokenDeployer", type: "uint16", internalType: "uint16" },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "updateFeeVaults",
    inputs: [
      { name: "newFeeVaults", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "upgradeToAndCall",
    inputs: [
      { name: "newImplementation", type: "address", internalType: "address" },
      { name: "data", type: "bytes", internalType: "bytes" },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "withdrawRaisedToken",
    inputs: [
      { name: "launchedToken", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "DefaultAdminDelayChangeCanceled",
    inputs: [],
    anonymous: false,
  },
  {
    type: "event",
    name: "DefaultAdminDelayChangeScheduled",
    inputs: [
      {
        name: "newDelay",
        type: "uint48",
        indexed: false,
        internalType: "uint48",
      },
      {
        name: "effectSchedule",
        type: "uint48",
        indexed: false,
        internalType: "uint48",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DefaultAdminTransferCanceled",
    inputs: [],
    anonymous: false,
  },
  {
    type: "event",
    name: "DefaultAdminTransferScheduled",
    inputs: [
      {
        name: "newAdmin",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "acceptSchedule",
        type: "uint48",
        indexed: false,
        internalType: "uint48",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "EventAdded",
    inputs: [
      {
        name: "depositor",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "pair",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "EventRemoved",
    inputs: [
      {
        name: "depositor",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "pair",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PairCreated",
    inputs: [
      {
        name: "raisedToken",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "launchedToken",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "pair",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      { name: "", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RoleAdminChanged",
    inputs: [
      {
        name: "role",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "previousAdminRole",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "newAdminRole",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RoleGranted",
    inputs: [
      {
        name: "role",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "sender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RoleRevoked",
    inputs: [
      {
        name: "role",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "sender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Upgraded",
    inputs: [
      {
        name: "implementation",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  { type: "error", name: "AccessControlBadConfirmation", inputs: [] },
  {
    type: "error",
    name: "AccessControlEnforcedDefaultAdminDelay",
    inputs: [{ name: "schedule", type: "uint48", internalType: "uint48" }],
  },
  {
    type: "error",
    name: "AccessControlEnforcedDefaultAdminRules",
    inputs: [],
  },
  {
    type: "error",
    name: "AccessControlInvalidDefaultAdmin",
    inputs: [
      { name: "defaultAdmin", type: "address", internalType: "address" },
    ],
  },
  {
    type: "error",
    name: "AccessControlUnauthorizedAccount",
    inputs: [
      { name: "account", type: "address", internalType: "address" },
      { name: "neededRole", type: "bytes32", internalType: "bytes32" },
    ],
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [{ name: "target", type: "address", internalType: "address" }],
  },
  {
    type: "error",
    name: "AddressInsufficientBalance",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
  },
  { type: "error", name: "CreatePairFailed", inputs: [] },
  { type: "error", name: "ERC1167FailedCreateClone", inputs: [] },
  {
    type: "error",
    name: "ERC1967InvalidImplementation",
    inputs: [
      { name: "implementation", type: "address", internalType: "address" },
    ],
  },
  { type: "error", name: "ERC1967NonPayable", inputs: [] },
  { type: "error", name: "FailedInnerCall", inputs: [] },
  {
    type: "error",
    name: "IdenticalAddress",
    inputs: [
      { name: "launchedToken", type: "address", internalType: "address" },
    ],
  },
  { type: "error", name: "InvalidAddress", inputs: [] },
  { type: "error", name: "InvalidAllocationSum", inputs: [] },
  { type: "error", name: "InvalidInitialization", inputs: [] },
  { type: "error", name: "InvalidLaunchCycle", inputs: [] },
  { type: "error", name: "InvalideTiers", inputs: [] },
  { type: "error", name: "MemeTokenSupplyCannotBeZero", inputs: [] },
  {
    type: "error",
    name: "NotAllowedRaisedToken",
    inputs: [{ name: "token", type: "address", internalType: "address" }],
  },
  {
    type: "error",
    name: "NotEligibleForWithdraw",
    inputs: [{ name: "memePair", type: "address", internalType: "address" }],
  },
  { type: "error", name: "NotInitializing", inputs: [] },
  {
    type: "error",
    name: "PairExists",
    inputs: [
      { name: "launchedToken", type: "address", internalType: "address" },
    ],
  },
  { type: "error", name: "PairIsInvalid", inputs: [] },
  { type: "error", name: "RaisedTokenMinCapCannotBeZero", inputs: [] },
  {
    type: "error",
    name: "SafeCastOverflowedUintDowncast",
    inputs: [
      { name: "bits", type: "uint8", internalType: "uint8" },
      { name: "value", type: "uint256", internalType: "uint256" },
    ],
  },
  {
    type: "error",
    name: "SafeERC20FailedOperation",
    inputs: [{ name: "token", type: "address", internalType: "address" }],
  },
  { type: "error", name: "UUPSUnauthorizedCallContext", inputs: [] },
  {
    type: "error",
    name: "UUPSUnsupportedProxiableUUID",
    inputs: [{ name: "slot", type: "bytes32", internalType: "bytes32" }],
  },
] as const;
