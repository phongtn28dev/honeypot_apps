export const pot2PumpPairABI = [
  {
    type: "function",
    name: "MAX_BASIS_POINTS",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "PairState",
    inputs: [],
    outputs: [
      { name: "", type: "uint8", internalType: "enum IBasePair.Status" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "allocation",
    inputs: [],
    outputs: [
      {
        name: "participantAllocation",
        type: "uint256",
        internalType: "uint256",
      },
      { name: "tokenDeployer", type: "uint256", internalType: "uint256" },
      { name: "honeypotFee", type: "uint16", internalType: "uint16" },
      { name: "burnAllocation", type: "uint16", internalType: "uint16" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "claimLP",
    inputs: [{ name: "claimer", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "claimableLP",
    inputs: [{ name: "claimer", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "claimedLp",
    inputs: [{ name: "", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "depositRaisedToken",
    inputs: [
      { name: "depositor", type: "address", internalType: "address" },
      { name: "amount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "depositedLaunchedToken",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "depositedRaisedToken",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "dexPool",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "dexRouter",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "endTime",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "factory",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      { name: "_tokenDeployer", type: "address", internalType: "address" },
      { name: "_raisedToken", type: "address", internalType: "address" },
      { name: "_launchedToken", type: "address", internalType: "address" },
      { name: "_dexRouter", type: "address", internalType: "address" },
      { name: "_launchCycle", type: "uint256", internalType: "uint256" },
      { name: "_raisedTokenMinCap", type: "uint256", internalType: "uint256" },
      {
        name: "_allocation",
        type: "tuple",
        internalType: "struct IPot2PumpFactory.LPAllocation",
        components: [
          {
            name: "participantAllocation",
            type: "uint16",
            internalType: "uint16",
          },
          { name: "burnAllocation", type: "uint16", internalType: "uint16" },
          { name: "honeypotFee", type: "uint16", internalType: "uint16" },
          { name: "tokenDeployer", type: "uint16", internalType: "uint16" },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "launchCycle",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "launchedToken",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "lpToken",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "onERC721Received",
    inputs: [
      { name: "", type: "address", internalType: "address" },
      { name: "", type: "address", internalType: "address" },
      { name: "", type: "uint256", internalType: "uint256" },
      { name: "", type: "bytes", internalType: "bytes" },
    ],
    outputs: [{ name: "", type: "bytes4", internalType: "bytes4" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "raisedToken",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "raisedTokenDeposit",
    inputs: [{ name: "", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "raisedTokenMinCap",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "refundRaisedToken",
    inputs: [{ name: "depositor", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startTime",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenDeployer",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "ClaimLP",
    inputs: [
      {
        name: "claimer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      { name: "", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DepositRaisedToken",
    inputs: [
      {
        name: "depositor",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "depositAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  { type: "event", name: "Paused", inputs: [], anonymous: false },
  {
    type: "event",
    name: "Perform",
    inputs: [
      {
        name: "pairState",
        type: "uint8",
        indexed: false,
        internalType: "enum IBasePair.Status",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Refund",
    inputs: [
      {
        name: "depositor",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "refundAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  { type: "event", name: "Resumed", inputs: [], anonymous: false },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [{ name: "target", type: "address", internalType: "address" }],
  },
  {
    type: "error",
    name: "AddressInsufficientBalance",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
  },
  { type: "error", name: "FailedInnerCall", inputs: [] },
  {
    type: "error",
    name: "IdenticalAddress",
    inputs: [
      { name: "launchedToken", type: "address", internalType: "address" },
    ],
  },
  { type: "error", name: "InvalidAmount", inputs: [] },
  {
    type: "error",
    name: "LaunchCycleIsOver",
    inputs: [
      { name: "currentTime", type: "uint256", internalType: "uint256" },
      { name: "endTime", type: "uint256", internalType: "uint256" },
    ],
  },
  { type: "error", name: "MathOverflowedMulDiv", inputs: [] },
  {
    type: "error",
    name: "NoClaimAmountRemaining",
    inputs: [
      { name: "lpAmount", type: "uint256", internalType: "uint256" },
      { name: "claimedAmount", type: "uint256", internalType: "uint256" },
    ],
  },
  { type: "error", name: "NotDepositedRaisedToken", inputs: [] },
  { type: "error", name: "NotEligibleForClaim", inputs: [] },
  {
    type: "error",
    name: "PairStatusError",
    inputs: [
      {
        name: "code",
        type: "uint8",
        internalType: "enum BasePair.PairErrorCode",
      },
    ],
  },
  { type: "error", name: "ReentrancyGuardReentrantCall", inputs: [] },
  {
    type: "error",
    name: "SafeERC20FailedOperation",
    inputs: [{ name: "token", type: "address", internalType: "address" }],
  },
  { type: "error", name: "SqrtRatioX96Overflow", inputs: [] },
  { type: "error", name: "TokenAddressIsZero", inputs: [] },
  {
    type: "error",
    name: "Unauthorized",
    inputs: [{ name: "caller", type: "address", internalType: "address" }],
  },
  { type: "error", name: "priceOutOfRange", inputs: [] },
  { type: "error", name: "tickOutOfRange", inputs: [] },
] as const;
